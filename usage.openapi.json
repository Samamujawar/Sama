{
  "openapi": "3.0.0",
  "externalDocs": {
    "url": "https://github.com/intento/intento-api/blob/master/usage.md"
  },
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "servers": [
    {
      "url": "https://api.inten.to/usage"
    }
  ],
  "info": {
    "description": "This is an intent to get usage statistics about all calls to the API.\n",
    "title": "Usage API",
    "version": "1.0.0"
  },
  "paths": {
    "/intento": {
      "post": {
        "summary": "Get statistics for API calls to Intento API",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Data"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON structure"
          },
          "401": {
            "description": "Intento: Auth key is missing"
          },
          "403": {
            "description": "Intento: Auth key is invalid"
          },
          "500": {
            "description": "Intento: Internal error"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Input"
        }
      }
    },
    "/provider": {
      "post": {
        "summary": "Get statistics for API calls to providers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Data"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON structure"
          },
          "401": {
            "description": "Intento: Auth key is missing"
          },
          "403": {
            "description": "Intento: Auth key is invalid"
          },
          "500": {
            "description": "Intento: Internal error"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Input"
        }
      }
    },
    "/distinct": {
      "post": {
        "summary": "This API endpoint helps to find out what intents or providers were used at least once during specified (in `range`) period of time",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistinctResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON structure"
          },
          "401": {
            "description": "Intento: Auth key is missing"
          },
          "403": {
            "description": "Intento: Auth key is invalid"
          },
          "500": {
            "description": "Intento: Internal error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Distinct"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey"
      }
    },
    "schemas": {
      "Input": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/components/schemas/Range"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter"
          }
        }
      },
      "Range": {
        "example": {},
        "type": "object",
        "properties": {
          "items": {
            "type": "integer"
          },
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "format": "int64"
          },
          "bucket": {
            "type": "string"
          }
        }
      },
      "Group": {
        "example": [
          "provider"
        ],
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "intent",
            "provider",
            "status"
          ]
        }
      },
      "Filter": {
        "example": {},
        "allOf": [
          {
            "$ref": "#/components/schemas/Intent"
          },
          {
            "$ref": "#/components/schemas/Provider"
          },
          {
            "$ref": "#/components/schemas/Status"
          }
        ]
      },
      "Intent": {
        "type": "object",
        "properties": {
          "intent": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GroupIntent": {
        "type": "object",
        "properties": {
          "intent": {
            "type": "string"
          }
        }
      },
      "GroupProvider": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          }
        }
      },
      "GroupStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "ResponseGroup": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/GroupIntent"
          },
          {
            "$ref": "#/components/schemas/GroupProvider"
          },
          {
            "$ref": "#/components/schemas/GroupStatus"
          }
        ]
      },
      "Items": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "group": {
            "$ref": "#/components/schemas/ResponseGroup"
          },
          "metrics": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "integer",
                "format": "int64"
              },
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "symbols": {
                "type": "integer",
                "format": "int64"
              },
              "errors": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "errors": {
            "type": "object",
            "properties": {
              "client": {
                "type": "object",
                "properties": {
                  "total": {
                    "example": 0,
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "intento": {
                "type": "object",
                "properties": {
                  "total": {
                    "example": 0,
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "provider": {
                "type": "object",
                "properties": {
                  "total": {
                    "example": 0,
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "Data": {
        "type": "object",
        "properties": {
          "status": {
            "example": "OK",
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items"
            }
          }
        }
      },
      "Distinct": {
        "type": "object",
        "properties": {
          "range": {
            "$ref": "#/components/schemas/Range"
          },
          "filter": {
            "$ref": "#/components/schemas/Filter"
          },
          "fields": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "DistinctResponse": {
        "type": "object",
        "properties": {
          "status": {
            "example": "OK",
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "intent": {
                "type": "array",
                "items": {
                  "example": "ai.text.sentiment",
                  "type": "string"
                }
              },
              "provider": {
                "type": "array",
                "items": {
                  "example": "ai.text.sentiment.some_name.some_version",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "Input": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Input"
            }
          }
        },
        "required": true
      },
      "Distinct": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Distinct"
            }
          }
        },
        "required": true
      }
    }
  }
}